name: 'setup-renv'
description: 'Action to setup renv and install R dependencies in the lockfile'
author: 'patrik.beka@powerex.io'
inputs:
  working-dir:
    description: 'Working directory with source codes and renv.lock file'
    required: true
  renv-version:
    description: 'Version of renv package'
    required: false
    default: 0.14.0
  personal-access-token:
    description: 'Github access token for installing packages from private repositories'
    required: false
    default: "personal-access-token"
  cache-version:
    description: 'Version of renv cache'
    required: false
    default: v3

runs:
  using: "composite"
  steps:
      - name: Check if lockfile exist
        run: |
          FILE=${{ inputs.working-dir }}/renv.lock

          if [ -f "$FILE" ]; then
              echo "$FILE found."
          else
              echo "$FILE does not exist."
              exit 1
          fi
        shell: bash

      - name: Install renv
        run: |
          install.packages("https://cran.r-project.org/src/contrib/Archive/renv/renv_${{ inputs.renv-version }}.tar.gz", repos=NULL, type="source")
        shell: Rscript {0}

      - name: Set up renv dir as env variable
        run: |
          # set renv directory as env variable for cache
          system(paste0("echo 'RENV_LIB_DIR=", "${{ inputs.working-dir }}/renv", "' >> $GITHUB_ENV"))
        shell: Rscript {0}

      - name: Always upload global cache
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: "${{ env.RENV_LIB_DIR }}"
          key: ${{ runner.os }}-${{ inputs.working-dir }}-renv-${{ inputs.cache-version }}-${{ hashFiles('**/renv.lock') }}
          restore-keys: ${{ runner.os }}-${{ inputs.working-dir }}-renv-${{ inputs.cache-version }}

      - name: Install dependencies from lockfile
        run: |
          # set personal access token for private repositories
          Sys.setenv(GITHUB_PAT = "${{ inputs.personal-access-token }}")

          renv::restore(project = "${{ inputs.working-dir }}")

          renv::isolate(project = "${{ inputs.working-dir }}")
        shell: Rscript {0}

      - name: List installed packages
        run: |
          ls -la "${{ env.RENV_LIB_DIR }}"
        shell: bash
