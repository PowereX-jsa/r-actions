name: 'setup-renv'
description: 'Action to setup renv and install R dependencies in the lockfile'
author: 'patrik.beka@powerex.io'
inputs:
  working-dir:
    description: 'Working directory with source codes and renv.lock file'
    required: true
  renv-version:
    description: 'Version of renv package'
    required: false
    default: 0.13.0

runs:
  using: "composite"
  steps:
      - name: Check if lockfile exist
        run: |
          FILE=${{ inputs.working-dir }}/renv.lock

          if [ -f "$FILE" ]; then
              echo "$FILE found."
          else
              echo "$FILE does not exist."
              exit 1
          fi
        shell: bash

      - name: Install renv
        run: |
          install.packages("https://cran.r-project.org/src/contrib/Archive/renv/renv_${{ inputs.renv-version }}.tar.gz", repos=NULL, type="source")
        shell: Rscript {0}

      # workaround for caching renv global lib directory
      - name: Get and set global renv library dir
        run: |
          renv_lib_path <- renv:::renv_libpaths_resolve(library = NULL)[1]
          # set path as env variable
          system(paste0("echo 'RENV_LIB=", renv_lib_path, "' >> $GITHUB_ENV"))
        shell: Rscript {0}

      - name: Always upload global cache
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: "${{ env.RENV_LIB }}"
          key: global-${{ runner.os }}-${{ inputs.working-dir }}-renv-hashFiles(${{ inputs.working-dir }}/renv.lock)
          restore-keys: global-${{ runner.os }}-${{ inputs.working-dir }}-renv-

      - name: Always upload local cache
        uses: pat-s/always-upload-cache@v2.1.5
        with:
          path: "${{ inputs.working-dir }}/renv"
          key: local-${{ runner.os }}-${{ inputs.working-dir }}-renv-hashFiles(${{ inputs.working-dir }}/renv.lock)
          restore-keys: local-${{ runner.os }}-${{ inputs.working-dir }}-renv-

      - name: Install dependencies from lockfile
        run: |

          renv::activate(project = "${{ inputs.working-dir }}")

          renv::repair(project = "${{ inputs.working-dir }}")

          renv::restore(project = "${{ inputs.working-dir }}")
        shell: Rscript {0}

      - name: List installed packages
        run: |
          ls -la "${{ env.RENV_LIB }}"
        shell: bash

      - name: List renv
        run: |
          ls -la "${{ inputs.working-dir }}/renv"
        shell: bash
